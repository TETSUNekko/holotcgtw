// SearchBar.jsx
import React, { useState, useRef, useEffect } from "react";

function SearchBar({
  playerName,
  filterType,
  setFilterType,
  searchTerm,
  setSearchTerm,
  filterColor,
  setFilterColor,
  filterGrade,
  setFilterGrade,
  filterSeries,
  setFilterSeries,
  supportSubtype,
  setSupportSubtype,
  filterVersion,
  setFilterVersion,
  shareCode,
  setShareCode,
  onExportImage,
  onExportCode,
  onImportCode,
  onClearDeck,
  selectedTag,
  setSelectedTag,
  allTags,
  loading
}) {
  const [showDropdown, setShowDropdown] = useState(false);
  const [tagSearchInput, setTagSearchInput] = useState("");
  const [tagDropdownOpen, setTagDropdownOpen] = useState(false);
  const tagInputRef = useRef();

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (tagInputRef.current && !tagInputRef.current.contains(event.target)) {
        setTagDropdownOpen(false);
      }
    };
    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  const handleCopyCode = async () => {
    const data = await onExportCode();
    if (data) {
      navigator.clipboard.writeText(data).then(() => {
        alert(`­ЪЊІ ти▓УцЄУБйС╗Буб╝ ${data} тѕ░тЅфУ▓╝у░┐№╝Ђ`);
      }).catch(() => {
        alert("РЮї уёАТ│ЋУцЄУБйС╗Буб╝");
      });
    }
  };

  const typeDisplayName = {
    "тЁежЃе": "тЇАуЅЄуе«жАъ",
    "Oshi": "СИ╗ТјетЇА",
    "Member": "ТѕљтЊАтЇА",
    "Support": "Тћ»ТЈ┤тЇА",
    "Energy": "УЃйжЄЈтЇА"
  };
  const extraLabel =
    filterType === "Member" && filterGrade !== "тЁежЃежџју┤џ"
      ? ` - ${filterGrade}`
      : filterType === "Support" && supportSubtype !== "тЁежЃе"
      ? ` - ${supportSubtype}`
      : "";

  return (
    <div className="sticky top-0 z-10 bg-amber-50 p-3 border-b border-yellow-300 shadow-sm">
      <div className="flex flex-wrap items-center gap-2 overflow-visible">
        <button
          onClick={() => {
            setSearchTerm("");
            setFilterType("тЁежЃе");
            setFilterColor("тЁежЃежАЈУЅ▓");
            setFilterGrade("тЁежЃежџју┤џ");
            setFilterSeries("тЁежЃетйѕТЋИ");
            setSupportSubtype("тЁежЃе");
            setFilterVersion("тЁежЃеуЅѕТюг");
            setSelectedTag("тЁежЃеТеЎу▒ц");
            setTagSearchInput("");
          }}
          className="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded"
        >
          ­Ъћё ТИЁуЕ║Тљют░І
        </button>

        <div className="relative">
          <button
            onClick={() => setShowDropdown(!showDropdown)}
            className="border rounded px-2 py-1 bg-white"
          >
            {typeDisplayName[filterType] || "тЇАуЅЄуе«жАъ"}{extraLabel} РќЙ
          </button>

          {showDropdown && (
            <div className="absolute bg-white border rounded shadow z-10 w-32 mt-1">
              <div
                className="px-4 py-2 hover:bg-gray-200 cursor-pointer"
                onClick={() => {
                  setFilterType("тЁежЃе");
                  setFilterGrade("тЁежЃежџју┤џ");
                  setSupportSubtype("тЁежЃе");
                  setShowDropdown(false);
                }}
              >
                тЁежЃетЇАуЅЄ
              </div>
              <div
                className="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                onClick={() => {
                  setFilterType("Oshi");
                  setFilterGrade("тЁежЃежџју┤џ");
                  setSupportSubtype("тЁежЃе");
                  setShowDropdown(false);
                }}
              >
                СИ╗ТјетЇА
              </div>
              <div className="group relative">
                <div className="px-4 py-2 hover:bg-gray-100 cursor-pointer">ТѕљтЊАтЇА РќИ</div>
                <div className="absolute left-full top-0 bg-white border rounded shadow hidden group-hover:block w-28">
                  {["тЁежЃежџју┤џ", "debut", "1st", "2nd", "buzz", "spot"].map((grade) => (
                    <div
                      key={grade}
                      className="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                      onClick={() => {
                        setFilterType("Member");
                        setFilterGrade(grade);
                        setSupportSubtype("тЁежЃе");
                        setShowDropdown(false);
                      }}
                    >
                      {grade}
                    </div>
                  ))}
                </div>
              </div>
              <div className="group relative">
                <div className="px-4 py-2 hover:bg-gray-100 cursor-pointer">Тћ»ТЈ┤тЇА РќИ</div>
                <div className="absolute left-full top-0 bg-white border rounded shadow hidden group-hover:block w-28">
                  {["тЁежЃе", "item", "event", "tool", "mascot", "fan", "staff"].map((subtype) => (
                    <div
                      key={subtype}
                      className="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                      onClick={() => {
                        setFilterType("Support");
                        setSupportSubtype(subtype);
                        setFilterGrade("тЁежЃежџју┤џ");
                        setShowDropdown(false);
                      }}
                    >
                      {subtype}
                    </div>
                  ))}
                </div>
              </div>
              <div
                className="px-4 py-2 hover:bg-gray-100 cursor-pointer"
                onClick={() => {
                  setFilterType("Energy");
                  setFilterGrade("тЁежЃежџју┤џ");
                  setSupportSubtype("тЁежЃе");
                  setShowDropdown(false);
                }}
              >
                УЃйжЄЈтЇА
              </div>
            </div>
          )}
        </div>

        <input
          type="text"
          placeholder="Тљют░ІтЇАуЅЄуиеУЎЪТѕќтљЇуе▒..."
          className="border px-2 py-1 rounded"
          value={searchTerm}
          onChange={(e) => setSearchTerm(e.target.value)}
        />

        <select className="border rounded px-2 py-1" value={filterColor} onChange={(e) => setFilterColor(e.target.value)}>
          <option value="тЁежЃежАЈУЅ▓">тЁежЃежАЈУЅ▓</option>
          <option value="red">у┤Ё</option>
          <option value="white">уЎй</option>
          <option value="blue">УЌЇ</option>
          <option value="green">уХа</option>
          <option value="yellow">ж╗Ѓ</option>
          <option value="purple">у┤Ф</option>
          <option value="colorless">уёА</option>
        </select>

        <select className="border rounded px-2 py-1" value={filterSeries} onChange={(e) => setFilterSeries(e.target.value)}>
          <option value="тЁежЃетйѕТЋИ">тЁежЃетйѕТЋИ</option>
          <option value="hBP01">hBP01сЃќсЃ╝сѓ╣сѓ┐сЃ╝сЃЉсЃЃсѓ»сђїсЃќсЃФсЃ╝сЃЪсЃ│сѓ░сЃгсЃЄсѓБсѓбсЃ│сѓ╣сђЇ</option>
          <option value="hBP02">hBP02сЃќсЃ╝сѓ╣сѓ┐сЃ╝сЃЉсЃЃсѓ»сђїсѓ»сѓцсЃ│сЃєсЃЃсЃѕсѓ╣сЃџсѓ»сЃѕсЃЕсЃасђЇ</option>
          <option value="hBP03">hBP03сЃќсЃ╝сѓ╣сѓ┐сЃ╝сЃЉсЃЃсѓ»сђїсѓесЃфсЃ╝сЃѕсѓ╣сЃЉсЃ╝сѓ»сђЇ</option>
          <option value="hSD01">hSD01сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГсђїсЂесЂЇсЂ«сЂЮсѓЅ№╝єAZKiсђЇ</option>
          <option value="hSD02">hSD02сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГ Ухц уЎЙжг╝сЂѓсѓёсѓЂ</option>
          <option value="hSD03">hSD03сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГ жЮњ уїФтЈѕсЂісЂІсѓє</option>
          <option value="hSD04">hSD04сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГ у┤Ф уЎњТюѕсЂАсѓЄсЂЊ</option>
          <option value="hSD05">hSD05сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГ уЎй УйЪсЂ»сЂўсѓЂ</option>
          <option value="hSD06">hSD06сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГ уиЉ жбеуюЪсЂёсѓЇсЂ»</option>
          <option value="hSD07">hSD07сѓ╣сѓ┐сЃ╝сЃѕсЃЄсЃЃсѓГ ж╗ё СИЇуЪЦуЂФсЃЋсЃгсѓб</option>
          <option value="hPR">PRсѓФсЃ╝сЃЅ</option>
        </select>

        <div className="relative" ref={tagInputRef}>
          <button
            onClick={() => setTagDropdownOpen(!tagDropdownOpen)}
            className="border rounded px-2 py-1 bg-white min-w-[180px] text-left"
          >
            {selectedTag ? `#${selectedTag}` : "Тљют░ІтЇАуЅЄТеЎу▒ц..."} РќЙ
          </button>

          {tagDropdownOpen && (
            <div className="absolute z-20 mt-1 w-full bg-white border rounded shadow max-h-60 overflow-y-auto">
              <input
                type="text"
                value={tagSearchInput}
                onChange={(e) => setTagSearchInput(e.target.value)}
                className="w-full px-2 py-1 border-b"
                placeholder="У╝ИтЁЦТеЎу▒цтљЇуе▒..."
              />

              {/* РъЋ тЏ║т«џуџёсђїтЁежЃеТеЎу▒цсђЇжЂИжаЁ */}
              <div
                onClick={() => {
                  setSelectedTag("тЁежЃеТеЎу▒ц");
                  setTagDropdownOpen(false);
                  setTagSearchInput("");
                }}
                className="px-4 py-1 hover:bg-gray-100 cursor-pointer font-semibold text-gray-600"
              >
                #тЁежЃеТеЎу▒ц
              </div>

              {/* ­ЪћЇ у»ЕжЂИтЙїуџёТеЎу▒цтѕЌУАе */}
              {allTags
                .filter((tag) => tag.includes(tagSearchInput))
                .map((tag) => (
                  <div
                    key={tag}
                    onClick={() => {
                      setSelectedTag(tag);
                      setTagDropdownOpen(false);
                      setTagSearchInput("");
                    }}
                    className="px-4 py-1 hover:bg-gray-100 cursor-pointer"
                  >
                    #{tag}
                  </div>
              ))}
            </div>
          )}
        </div>

        <select
          className="border rounded px-2 py-1"
          value={filterVersion}
          onChange={(e) => setFilterVersion(e.target.value)}
        >
          <option value="тЁежЃеуЅѕТюг">тЁежЃеуЅѕТюг</option>
          <option value="_C">C</option>
          <option value="_U">U</option>
          <option value="_S">S</option>
          <option value="_R">R</option>
          <option value="_RR">RR</option>
          <option value="_SR">SR</option>
          <option value="_UR">UR</option>
          <option value="_OC">OC</option>
          <option value="_OSR">OSR</option>
          <option value="_OUR">OUR</option>
          <option value="_SEC">SEC</option>
          <option value="_P">P</option>
          <option value="_SY">SY</option>
        </select>
      </div>

      <div className="mt-2 flex flex-wrap items-center gap-2">
        <button 
          onClick={onClearDeck}
          className="bg-gray-500 hover:bg-gray-600 text-white px-3 py-1 rounded"
        >
          ­ЪД╣ ТИЁуЕ║уЅїухё
        </button>
        <button 
          onClick={onExportImage}
          className="bg-green-500 hover:bg-green-600 text-white px-3 py-1 rounded"
        >
          ­ЪЊі У╝ИтЄ║тюќУАе
        </button>
        <button 
          onClick={handleCopyCode}
          className="bg-blue-500 hover:bg-blue-600 text-white px-3 py-1 rounded"
        >
          ­ЪћЌ тѕєС║ФС╗Буб╝
        </button>
        <input
          type="text"
          placeholder="У╝ИтЁЦС╗Буб╝..."
          className="border px-2 py-1 rounded"
          value={shareCode}
          onChange={(e) => setShareCode(e.target.value)}
        />
        <button
          onClick={onImportCode}
          className="bg-purple-500 hover:bg-purple-600 text-white px-3 py-1 rounded flex items-center gap-2"
        >
          {loading ? (
            <svg className="animate-spin h-4 w-4 text-white" viewBox="0 0 24 24">
              <circle className="opacity-25" cx="12" cy="12" r="10"
                stroke="currentColor" strokeWidth="4" fill="none" />
              <path className="opacity-75" fill="currentColor"
                d="M4 12a8 8 0 018-8v8z" />
            </svg>
          ) : (
            <>­ЪЊЦ У«ђтЈќС╗Буб╝</>
          )}
        </button>

        <a
          href="https://mail.google.com/mail/?view=cm&fs=1&to=holotcgtw.feedback@gmail.com&su=HoloTCGТёЈУдІтЏъжЦІ&body=УФІтюеТГцтАФт»ФСйауџёТёЈУдІ№йъ"
          target="_blank"
          rel="noopener noreferrer"
          className="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded"
        >
          ­ЪЊ« ТёЈУдІтЏъжЦІ
        </a>
      </div>

      <div className="mt text-right text-[12px] text-gray-500 pr-1">
        у┐╗УГ»тюќСЙєТ║љ№╝џ<a
          href="https://www.facebook.com/HoONeko"
          target="_blank"
          rel="noopener noreferrer"
          className="underline hover:text-blue-500"
        >
          ж││тЄ░У▓Њ Bushiroad Card Gamer 
        </a>
      </div>
    </div>
  );
}

export default SearchBar;
